# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - master
    - release/beta/*
    - hotfix/*

pool:
  vmImage: 'windows-latest'

variables:
  projects: '$(solution)'
  configuration: '$(buildConfiguration)'
  projectToPackage: 'Breaker/Breaker.csproj'
  buildConfiguration: 'Release'
  GitVersion.SemVer: ''
  GitVersion.NuGetVersion: ''
  
# this pipeline has one implicit stage
steps:
  - task: UseGitVersion@5
    inputs:
      versionSpec: '5.x'
      updateAssemblyInfo: false

  - task: DotNetCoreCLI@2 
    displayName: 'Building' 
    inputs: 
      command: build
      versioningScheme: byEnvVar
      versionEnvVar: '$(GitVersion.SemVer)'
      arguments: '--configuration $(buildConfiguration) /p:Version=$(GitVersion.SemVer)' 
      verbosityPack: 'Minimal'

  - task: DotNetCoreCLI@2
    displayName: Executing Tests
    inputs:
      command: test
      arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
      verbosityPack: 'Minimal'

  - script: dotnet test --logger trx --collect "Code coverage"
  - task: PublishTestResults@2
    displayName: Collecting Coverage Report
    inputs:
      testRunner: NUnit
      testResultsFiles: '**/*.trx'

  - task: DotNetCoreCLI@2
    displayName: 'Generating Artifact' 
    inputs: 
      command: pack
      packagesToPack: '$(projectToPackage)'
      arguments: '--configuration $(buildConfiguration)'
      nobuild: true
      versioningScheme: byEnvVar 
      versionEnvVar: GitVersion.SemVer
      packDirectory: $(Build.ArtifactStagingDirectory)
      verbosityPack: 'Minimal'

  - task: PublishBuildArtifacts@1
    inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'NuGetPackage'
        publishLocation: 'Container'